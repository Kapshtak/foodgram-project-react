name: Django-app workflow

on: [push]
env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  build_backend_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.USERNAME_DOCKER_HUB }}  
            password: ${{ secrets.PASSWORD_DOCKER_HUB }}  
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            file: ./backend/Dockerfile
            tags: ${{ secrets.USERNAME_DOCKER_HUB }}/foodgram-backend
  deploy:
    if: github.ref_name == ${{ vars.CONDITION }} 
    runs-on: ubuntu-latest
    needs: build_backend_and_push_to_docker_hub
    steps:
      - name: Execute remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose down
            sudo docker pull ${{ secrets.USERNAME_DOCKER_HUB }}/foodgram-backend
            touch infra/.env
            cd infra
            echo "DB_ENGINE=${{ secrets.DB_ENGINE }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py migrate
  send_message:
      runs-on: ubuntu-latest
      needs: deploy
      steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен! Сайт доступен по адресу ${{secrets.HOST}}/ 
